{"ast":null,"code":"import axios from 'axios';\n\n// יצירת מופע Axios עם הגדרות ברירת מחדל\nconst api = axios.create({\n  baseURL: \"http://localhost:5126\",\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// הגדרת interceptor לתפיסת שגיאות בתגובות\napi.interceptors.response.use(response => {\n  // אם התגובה תקינה, פשוט מחזירים אותה\n  return response;\n}, error => {\n  // אם יש שגיאה בתגובה\n  console.error(\"Axios Response Error Interceptor:\", error); // רישום השגיאה לקונסול\n  // כאן אפשר להוסיף לוגיקה נוספת לטיפול בשגיאות גלובליות\n  // לדוגמה, הצגת הודעה למשתמש, ניסיון חוזר לבקשה וכו'\n  return Promise.reject(error); // חשוב לזרוק את השגיאה כדי שהפונקציה הקוראת תוכל לטפל בה\n});\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await api.get('/items');\n      return result.data;\n    } catch (error) {\n      console.error(\"Error getting tasks:\", error); // רישום שגיאה ספציפית לפונקציה\n      throw error; // זריקת השגיאה למעלה\n    }\n  },\n  addTask: async name => {\n    try {\n      const result = await api.post('/items', {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      throw error;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    try {\n      const result = await api.put(`/items/${id}`, {\n        isComplete\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error setting task completion:\", error);\n      throw error;\n    }\n  },\n  deleteTask: async id => {\n    try {\n      const result = await api.delete(`/items/${id}`);\n      return result.status;\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","data","addTask","name","post","setCompleted","id","isComplete","put","deleteTask","delete","status"],"sources":["C:/Users/1/Desktop/שולמית/TodoApi/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// יצירת מופע Axios עם הגדרות ברירת מחדל\nconst api = axios.create({\n    baseURL: \"http://localhost:5126\",\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// הגדרת interceptor לתפיסת שגיאות בתגובות\napi.interceptors.response.use(\n    (response) => {\n        // אם התגובה תקינה, פשוט מחזירים אותה\n        return response;\n    },\n    (error) => {\n        // אם יש שגיאה בתגובה\n        console.error(\"Axios Response Error Interceptor:\", error); // רישום השגיאה לקונסול\n        // כאן אפשר להוסיף לוגיקה נוספת לטיפול בשגיאות גלובליות\n        // לדוגמה, הצגת הודעה למשתמש, ניסיון חוזר לבקשה וכו'\n        return Promise.reject(error); // חשוב לזרוק את השגיאה כדי שהפונקציה הקוראת תוכל לטפל בה\n    }\n);\n\nexport default {\n    getTasks: async () => {\n        try {\n            const result = await api.get('/items');\n            return result.data;\n        } catch (error) {\n            console.error(\"Error getting tasks:\", error); // רישום שגיאה ספציפית לפונקציה\n            throw error; // זריקת השגיאה למעלה\n        }\n    },\n\n    addTask: async (name) => {\n        try {\n            const result = await api.post('/items', { name });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error adding task:\", error);\n            throw error;\n        }\n    },\n\n    setCompleted: async (id, isComplete) => {\n        try {\n            const result = await api.put(`/items/${id}`, { isComplete });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error setting task completion:\", error);\n            throw error;\n        }\n    },\n\n    deleteTask: async (id) => {\n        try {\n            const result = await api.delete(`/items/${id}`);\n            return result.status;\n        } catch (error) {\n            console.error(\"Error deleting task:\", error);\n            throw error;\n        }\n    }\n}\n;\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxBD,QAAQ,IAAK;EACV;EACA,OAAOA,QAAQ;AACnB,CAAC,EACAE,KAAK,IAAK;EACP;EACAC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC,CAAC,CAAC;EAC3D;EACA;EACA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC;AAClC,CACJ,CAAC;AAED,eAAe;EACXI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,QAAQ,CAAC;MACtC,OAAOD,MAAM,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC9C,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAEDQ,OAAO,EAAE,MAAOC,IAAI,IAAK;IACrB,IAAI;MACA,MAAMJ,MAAM,GAAG,MAAMZ,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;QAAED;MAAK,CAAC,CAAC;MACjD,OAAOJ,MAAM,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDW,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACpC,IAAI;MACA,MAAMR,MAAM,GAAG,MAAMZ,GAAG,CAACqB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAE;QAAEC;MAAW,CAAC,CAAC;MAC5D,OAAOR,MAAM,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDe,UAAU,EAAE,MAAOH,EAAE,IAAK;IACtB,IAAI;MACA,MAAMP,MAAM,GAAG,MAAMZ,GAAG,CAACuB,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;MAC/C,OAAOP,MAAM,CAACY,MAAM;IACxB,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}