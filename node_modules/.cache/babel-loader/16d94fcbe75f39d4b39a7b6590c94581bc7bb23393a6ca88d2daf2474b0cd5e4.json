{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: \"https://localhost:5106\",\n  // השתמש ב-HTTP לפיתוח!\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.response.use(response => response, error => {\n  console.error(\"Axios Response Error Interceptor:\", error);\n  if (error.response) {\n    console.error(\"Status Code:\", error.response.status);\n    console.error(\"Response Data:\", error.response.data);\n  } else if (error.request) {\n    console.error(\"No response received:\", error.request);\n  } else {\n    console.error(\"Error setting up the request:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {/* ... */},\n  addTask: async name => {/* ... */},\n  setCompleted: async (id, isComplete) => {\n    // תיקון השם\n    try {\n      const result = await api.put(`/items/${id}`, {\n        isComplete\n      }); // תיקון השם\n      return result.data;\n    } catch (error) {\n      console.error(\"Error setting task completion:\", error);\n      throw error;\n    }\n  },\n  deleteTask: async id => {/* ... */}\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","response","use","error","console","status","data","request","message","Promise","reject","getTasks","addTask","name","setCompleted","id","isComplete","result","put","deleteTask"],"sources":["C:/Users/1/Desktop/שולמית/TodoApi/src/service.js"],"sourcesContent":["\nimport axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://localhost:5106\", // השתמש ב-HTTP לפיתוח!\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        console.error(\"Axios Response Error Interceptor:\", error);\n        if (error.response) {\n            console.error(\"Status Code:\", error.response.status);\n            console.error(\"Response Data:\", error.response.data);\n        } else if (error.request) {\n            console.error(\"No response received:\", error.request);\n        } else {\n            console.error(\"Error setting up the request:\", error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default {\n    getTasks: async () => { /* ... */ },\n    addTask: async (name) => { /* ... */ },\n    setCompleted: async (id, isComplete) => { // תיקון השם\n        try {\n            const result = await api.put(`/items/${id}`, { isComplete }); // תיקון השם\n            return result.data;\n        } catch (error) {\n            console.error(\"Error setting task completion:\", error);\n            throw error;\n        }\n    },\n    deleteTask: async (id) => { /* ... */ }\n};"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxBD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACPC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EACzD,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAChBG,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACF,QAAQ,CAACI,MAAM,CAAC;IACpDD,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACF,QAAQ,CAACK,IAAI,CAAC;EACxD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;IACtBH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;EACzD,CAAC,MAAM;IACHH,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACK,OAAO,CAAC;EACjE;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAe;EACXQ,QAAQ,EAAE,MAAAA,CAAA,KAAY,CAAE,UAAW;EACnCC,OAAO,EAAE,MAAOC,IAAI,IAAK,CAAE,UAAW;EACtCC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IAAE;IACtC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAAC,UAAUH,EAAE,EAAE,EAAE;QAAEC;MAAW,CAAC,CAAC,CAAC,CAAC;MAC9D,OAAOC,MAAM,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACf;EACJ,CAAC;EACDgB,UAAU,EAAE,MAAOJ,EAAE,IAAK,CAAE;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}